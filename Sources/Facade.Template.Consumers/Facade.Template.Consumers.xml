<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Facade.Template.Consumers</name>
    </assembly>
    <members>
        <member name="T:Facade.Template.Consumers.GetAllPlaceholdersCommand">
            <summary>
            Команда получения списка Placeholder.
            </summary>
        </member>
        <member name="T:Facade.Template.Consumers.GetAllPlaceholdersConsumer">
            <summary>
            Обработчик сообщения получения списка Placeholder.
            </summary>
        </member>
        <member name="M:Facade.Template.Consumers.GetAllPlaceholdersConsumer.#ctor(Facade.Template.Core.IPlaceholderService,Microsoft.Extensions.Logging.ILogger{Facade.Template.Consumers.GetAllPlaceholdersConsumer})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Facade.Template.Consumers.GetAllPlaceholdersConsumer"/>.
            </summary>
            <param name="service">Сервисный объект для управления Placeholder.</param>
            <param name="logger">Абстракция над сервисом журналирования.</param>
        </member>
        <member name="M:Facade.Template.Consumers.GetAllPlaceholdersConsumer.Consume(MassTransit.ConsumeContext{Facade.Template.Consumers.GetAllPlaceholdersCommand})">
            <summary>
            Обработать сообщение.
            </summary>
            <param name="context">Контекст обработки сообщения.</param>
            <returns>Асинхронная операция <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Facade.Template.Consumers.GetAllPlaceholdersResponse">
            <summary>
            Ответ на команду получения списка Placeholder.
            </summary>
        </member>
        <member name="P:Facade.Template.Consumers.GetAllPlaceholdersResponse.Placeholders">
            <summary>
            Получает или задает список Placeholder.
            </summary>
        </member>
        <member name="P:Facade.Template.Consumers.GetAllPlaceholdersResponse.Result">
            <summary>
            Получает или задает результат обработки команды.
            </summary>
        </member>
        <member name="T:Facade.Template.Consumers.GetPlaceholderCommand">
            <summary>
            Команда получения Placeholder.
            </summary>
        </member>
        <member name="P:Facade.Template.Consumers.GetPlaceholderCommand.Id">
            <summary>
            Получает или задает идентификатор Placeholder.
            </summary>
        </member>
        <member name="T:Facade.Template.Consumers.GetPlaceholderConsumer">
            <summary>
            Обработчик сообщения получения Placeholder.
            </summary>
        </member>
        <member name="M:Facade.Template.Consumers.GetPlaceholderConsumer.#ctor(Facade.Template.Core.IPlaceholderService,Microsoft.Extensions.Logging.ILogger{Facade.Template.Consumers.GetAllPlaceholdersConsumer})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Facade.Template.Consumers.GetPlaceholderConsumer"/>.
            </summary>
            <param name="service">Сервисный объект для управления Placeholder.</param>
            /// <param name="logger">Абстракция над сервисом журналирования.</param>
        </member>
        <member name="M:Facade.Template.Consumers.GetPlaceholderConsumer.Consume(MassTransit.ConsumeContext{Facade.Template.Consumers.GetPlaceholderCommand})">
            <summary>
            Обработать сообщение.
            </summary>
            <param name="context">Контекст обработки сообщения.</param>
            <returns>Асинхронная операция <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Facade.Template.Consumers.GetPlaceholderResponse">
            <summary>
            Ответ на команду получения Placeholder.
            </summary>
        </member>
        <member name="P:Facade.Template.Consumers.GetPlaceholderResponse.Placeholder">
            <summary>
            Получает или задает Placeholder.
            </summary>
        </member>
        <member name="P:Facade.Template.Consumers.GetPlaceholderResponse.Result">
            <summary>
            Получает или задает результат обработки команды.
            </summary>
        </member>
        <member name="T:Facade.Template.Consumers.Healthchecks.HealthcheckCommand">
            <summary>
            Команда получения состояния службы.
            </summary>
        </member>
        <member name="T:Facade.Template.Consumers.Healthchecks.HealthcheckConsumer">
            <summary>
            Обработчик сообщения получения состояния службы.
            </summary>
        </member>
        <member name="M:Facade.Template.Consumers.Healthchecks.HealthcheckConsumer.#ctor(Microsoft.Extensions.Logging.ILogger{Facade.Template.Consumers.Healthchecks.HealthcheckConsumer})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Facade.Template.Consumers.Healthchecks.HealthcheckConsumer"/>.
            </summary>
            <param name="logger">Абстракция над сервисом журналирования.</param>
        </member>
        <member name="M:Facade.Template.Consumers.Healthchecks.HealthcheckConsumer.Consume(MassTransit.ConsumeContext{Facade.Template.Consumers.Healthchecks.HealthcheckCommand})">
            <summary>
            Обработать сообщение.
            </summary>
            <param name="context">Контекст обработки сообщения.</param>
            <returns>Асинхронная операция <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Facade.Template.Consumers.Healthchecks.HealthcheckResponse">
            <summary>
            Ответ на команду получения состояния службы.
            </summary>
        </member>
        <member name="P:Facade.Template.Consumers.Healthchecks.HealthcheckResponse.Result">
            <summary>
            Получает или задает результат обработки команды.
            </summary>
        </member>
    </members>
</doc>
